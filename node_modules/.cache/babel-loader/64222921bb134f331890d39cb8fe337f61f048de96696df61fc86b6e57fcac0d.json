{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\India\\\\Downloads\\\\weboin-task-main\\\\weboin-task-main\\\\frontend\\\\src\\\\context\\\\Context.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport axios from \"axios\";\nimport { useState, createContext, useContext, useEffect } from \"react\";\n\n// -------------create context\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DataContext = /*#__PURE__*/createContext();\n\n// -------------create context provider\nexport const DataProvider = ({\n  children\n}) => {\n  _s();\n  const [name, setName] = useState(\"\");\n  const [role, setRole] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [phone, setPhone] = useState(\"\");\n  const [course, setCourse] = useState(\"\");\n  const [status, setStatus] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [studentsData, setStudentsData] = useState([]);\n  const [totalStudents, setTotalStudents] = useState('');\n  const [placedStudents, setPlacedStudents] = useState('');\n  const [unPlacedStudents, setUnPlacedStudents] = useState('');\n\n  // const Port = `http://localhost:4201`;\n  const Port = `https://weboin-task-server.onrender.com`;\n\n  // --- submit data\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const formData = {\n      name,\n      role,\n      email,\n      phone,\n      course,\n      status\n    };\n    console.log(\"Form Data : \", formData);\n    try {\n      const response = await axios.post(`${Port}/form`, formData);\n      if (response.status === 201 || response.status === 200) {\n        setMessage(\"Form submitted successfully!\");\n        setName(\"\"); // to clear the form entry\n        setRole(\"\");\n        setEmail(\"\");\n        setPhone(\"\");\n        setCourse(\"\");\n        setStatus(\"\");\n        fetchData(); // to get the updated data\n      }\n    } catch (error) {\n      console.error(\"Form submission error:\", error);\n      setMessage(\"An error occurred while submitting the form.\");\n    }\n  };\n\n  // --- fetch data\n  const fetchData = async () => {\n    try {\n      const response = await axios.get(`${Port}/form`);\n      // console.log(\"Response data:\", response.data);\n      if (response.status === 200) {\n        setStudentsData(response.data);\n        // console.log(\"State updated with data:\", response.data);\n      }\n    } catch (err) {\n      console.error(\"Error fetching student data:\", err);\n    }\n  };\n\n  // handle the side effects while fetching the data\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  //--- log the data fetched from the DB\n  // console.log( 'students data : ', studentsData); \n\n  //--- Display the message for 5 seconds and then clear it\n  useEffect(() => {\n    if (message) {\n      const timer = setTimeout(() => {\n        setMessage(\"\");\n      }, 5000); // Clear message after 5 seconds\n\n      // Clean up the timer if the component unmounts or message changes\n      return () => clearTimeout(timer);\n    }\n  }, [message]);\n\n  //--- Delete Data \n  const handleDelete = async id => {\n    try {\n      const response = await axios.delete(`${Port}/form/${id}`);\n      if (response.status === 200) {\n        setStudentsData(studentsData.filter(student => student._id !== id));\n        // alert('Student Data deleted successfully');        \n        console.log('Student Data deleted successfully');\n      }\n    } catch (err) {\n      console.error(\"Error deleting student data:\", err);\n    }\n  };\n\n  // to handle the side effects if once the studentsData is present then set the total no of students,placed,unplaced details \n  useEffect(() => {\n    setTotalStudents(studentsData.length);\n    const placed = studentsData.filter(student => student.status === \"Placed\").length;\n    setPlacedStudents(placed);\n    const unplaced = studentsData.filter(student => student.status === \"Unplaced\").length;\n    setUnPlacedStudents(unplaced);\n  }, [studentsData]);\n  const contextValue = {\n    name,\n    role,\n    email,\n    phone,\n    course,\n    status,\n    setName,\n    setRole,\n    setEmail,\n    setPhone,\n    setCourse,\n    setStatus,\n    handleSubmit,\n    message,\n    studentsData,\n    handleDelete,\n    totalStudents,\n    placedStudents,\n    unPlacedStudents\n  };\n  return /*#__PURE__*/_jsxDEV(DataContext.Provider, {\n    value: contextValue,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 138,\n    columnNumber: 5\n  }, this);\n};\n\n// -------------create custom useContext \n_s(DataProvider, \"3x3bUNYCNAj0S7kqAqb+gb5m1UU=\");\n_c = DataProvider;\nexport const useData = () => {\n  _s2();\n  return useContext(DataContext);\n};\n_s2(useData, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"DataProvider\");","map":{"version":3,"names":["axios","useState","createContext","useContext","useEffect","jsxDEV","_jsxDEV","DataContext","DataProvider","children","_s","name","setName","role","setRole","email","setEmail","phone","setPhone","course","setCourse","status","setStatus","message","setMessage","studentsData","setStudentsData","totalStudents","setTotalStudents","placedStudents","setPlacedStudents","unPlacedStudents","setUnPlacedStudents","Port","handleSubmit","e","preventDefault","formData","console","log","response","post","fetchData","error","get","data","err","timer","setTimeout","clearTimeout","handleDelete","id","delete","filter","student","_id","length","placed","unplaced","contextValue","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useData","_s2","$RefreshReg$"],"sources":["C:/Users/India/Downloads/weboin-task-main/weboin-task-main/frontend/src/context/Context.js"],"sourcesContent":["import axios from \"axios\";\nimport { useState, createContext, useContext, useEffect } from \"react\";\n\n// -------------create context\nconst DataContext = createContext();\n\n// -------------create context provider\nexport const DataProvider = ({children}) => {\n  const [name, setName] = useState(\"\");\n  const [role, setRole] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [phone, setPhone] = useState(\"\");\n  const [course, setCourse] = useState(\"\");\n  const [status, setStatus] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [studentsData, setStudentsData] = useState([]);\n  const [totalStudents, setTotalStudents] = useState('');\n  const [placedStudents, setPlacedStudents] = useState('');\n  const [unPlacedStudents, setUnPlacedStudents] = useState('');\n\n  // const Port = `http://localhost:4201`;\n  const Port = `https://weboin-task-server.onrender.com`;\n\n  // --- submit data\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    const formData = {\n      name,\n      role,\n      email,\n      phone,\n      course,\n      status,\n    };\n\n    console.log(\"Form Data : \", formData);\n    try {\n      const response = await axios.post(`${Port}/form`, formData);\n\n      if (response.status === 201 || response.status === 200) {\n        setMessage(\"Form submitted successfully!\");\n        setName(\"\"); // to clear the form entry\n        setRole(\"\");\n        setEmail(\"\");\n        setPhone(\"\");\n        setCourse(\"\");\n        setStatus(\"\");\n\n        fetchData(); // to get the updated data\n      }\n    } catch (error) {\n      console.error(\"Form submission error:\", error);\n      setMessage(\"An error occurred while submitting the form.\");\n    }\n  };\n\n  // --- fetch data\n  const fetchData = async () => {\n    try {\n      const response = await axios.get(`${Port}/form`);\n      // console.log(\"Response data:\", response.data);\n      if (response.status === 200) {\n        setStudentsData(response.data);\n        // console.log(\"State updated with data:\", response.data);\n      }\n    } catch (err) {\n      console.error(\"Error fetching student data:\", err);\n    }\n  };\n\n  // handle the side effects while fetching the data\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  //--- log the data fetched from the DB\n  // console.log( 'students data : ', studentsData); \n\n  //--- Display the message for 5 seconds and then clear it\n  useEffect(() => {\n    if (message) {\n      const timer = setTimeout(() => {\n        setMessage(\"\");\n      }, 5000); // Clear message after 5 seconds\n\n      // Clean up the timer if the component unmounts or message changes\n      return () => clearTimeout(timer);\n    }\n  }, [message]);\n\n  //--- Delete Data \n  const handleDelete = async (id) => {\n    try {\n      const response = await axios.delete(`${Port}/form/${id}`);\n      if (response.status === 200) {\n        setStudentsData(studentsData.filter( student => student._id !== id ));\n        // alert('Student Data deleted successfully');        \n        console.log('Student Data deleted successfully');   \n      }\n    } catch (err) {\n      console.error(\"Error deleting student data:\", err);\n    }\n  };\n\n  // to handle the side effects if once the studentsData is present then set the total no of students,placed,unplaced details \n  useEffect(() => {\n    setTotalStudents(studentsData.length);\n    const placed = studentsData.filter((student) => student.status === \"Placed\").length;\n    setPlacedStudents(placed);\n    const unplaced = studentsData.filter((student) => student.status === \"Unplaced\").length;\n    setUnPlacedStudents(unplaced);\n  }, [studentsData]);\n\n  const contextValue = {\n    name,\n    role,\n    email,\n    phone,\n    course,\n    status,\n    setName,\n    setRole,\n    setEmail,\n    setPhone,\n    setCourse,\n    setStatus,\n    handleSubmit,\n    message,\n    studentsData,\n    handleDelete,\n    totalStudents,\n    placedStudents,\n    unPlacedStudents,\n  };\n\n  return (\n    <DataContext.Provider value={contextValue}>{children}</DataContext.Provider>\n  );\n};\n\n// -------------create custom useContext \nexport const useData = () => useContext(DataContext);\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}